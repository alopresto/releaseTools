<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
license agreements. See the NOTICE file distributed with this work for additional
information regarding copyright ownership. The ASF licenses this file to
You under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of
the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
by applicable law or agreed to in writing, software distributed under the
License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
OF ANY KIND, either express or implied. See the License for the specific
language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.apache.test</groupId>
    <artifactId>testContribCheckProject</artifactId>
    <name>testContribCheckProject</name>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <maven.min-version>3.1.0</maven.min-version>
        <groovy.version>2.4.6</groovy.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <providerSelection>1.8</providerSelection>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generateStubs</goal>
                            <goal>compile</goal>
                            <goal>generateTestStubs</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireSameVersions>
                                    <plugins>
                                        <plugin>org.apache.maven.plugins:maven-surefire-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-failsafe-plugin</plugin>
                                        <plugin>org.apache.maven.plugins:maven-surefire-report-plugin</plugin>
                                    </plugins>
                                </requireSameVersions>
                                <requireMavenVersion>
                                    <version>${maven.min-version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <checkstyleRules>
                        <module name="Checker">
                            <property name="charset" value="UTF-8"/>
                            <property name="severity" value="warning"/>
                            <!-- Checks for whitespace -->
                            <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                            <module name="FileTabCharacter">
                                <property name="eachLine" value="true"/>
                            </module>
                            <module name="TreeWalker">
                                <module name="RegexpSinglelineJava">
                                    <property name="format" value="\s+$"/>
                                    <property name="message" value="Line has trailing whitespace."/>
                                </module>
                                <module name="RegexpSinglelineJava">
                                    <property name="format" value="[@]see\s+[{][@]link"/>
                                    <property name="message"
                                              value="Javadoc @see does not need @link: pick one or the other."/>
                                </module>
                                <module name="OuterTypeFilename"/>
                                <module name="LineLength">
                                    <!-- needs extra, because Eclipse formatter ignores the ending left
                                    brace -->
                                    <property name="max" value="200"/>
                                    <property name="ignorePattern"
                                              value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
                                </module>
                                <module name="AvoidStarImport"/>
                                <module name="UnusedImports">
                                    <property name="processJavadoc" value="true"/>
                                </module>
                                <module name="NoLineWrap"/>
                                <module name="LeftCurly">
                                    <property name="maxLineLength" value="160"/>
                                </module>
                                <module name="RightCurly"/>
                                <module name="RightCurly">
                                    <property name="option" value="alone"/>
                                    <property name="tokens"
                                              value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <property name="tokens" value="DOT"/>
                                    <property name="option" value="nl"/>
                                </module>
                                <module name="SeparatorWrap">
                                    <property name="tokens" value="COMMA"/>
                                    <property name="option" value="EOL"/>
                                </module>
                                <module name="PackageName">
                                    <property name="format" value="^[a-z]+(\.[a-z][a-zA-Z0-9]*)*$"/>
                                </module>
                                <module name="MethodTypeParameterName">
                                    <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                </module>
                                <module name="MethodParamPad"/>
                                <module name="OperatorWrap">
                                    <property name="option" value="NL"/>
                                    <property name="tokens"
                                              value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, QUESTION, SL, SR, STAR "/>
                                </module>
                                <module name="AnnotationLocation">
                                    <property name="tokens"
                                              value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
                                </module>
                                <module name="AnnotationLocation">
                                    <property name="tokens" value="VARIABLE_DEF"/>
                                    <property name="allowSamelineMultipleAnnotations" value="true"/>
                                </module>
                                <module name="NonEmptyAtclauseDescription"/>
                                <module name="JavadocMethod">
                                    <property name="allowMissingJavadoc" value="true"/>
                                    <property name="allowMissingParamTags" value="true"/>
                                    <property name="allowMissingThrowsTags" value="true"/>
                                    <property name="allowMissingReturnTag" value="true"/>
                                    <property name="allowedAnnotations"
                                              value="Override,Test,BeforeClass,AfterClass,Before,After"/>
                                    <property name="allowThrowsTagsForSubclasses" value="true"/>
                                </module>
                                <module name="SingleLineJavadoc"/>
                            </module>
                        </module>
                    </checkstyleRules>
                    <violationSeverity>warning</violationSeverity>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>0.11</version>
                <configuration>
                    <excludes>
                    </excludes>
                </configuration>
                <dependencies>
                    <!-- workaround for RAT-158 -->
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-core</artifactId>
                        <version>1.6</version>
                        <exclusions>
                            <exclusion>
                                <groupId>xerces</groupId>
                                <artifactId>xercesImpl</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Checks style and licensing requirements. This is a good idea to run
            for contributions and for the release process. While it would be nice to
            run always these plugins can considerably slow the build and have proven
            to create unstable builds in our multi-module project and when building using
            multiple threads. The stability issues seen with Checkstyle in multi-module
            builds include false-positives and false negatives. -->
            <id>contrib-check</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.rat</groupId>
                        <artifactId>apache-rat-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-style</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
